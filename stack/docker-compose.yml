name: 'todo-app'

services:
  # services
  frontend-local-build:
    container_name: todo-app-frontend
    ports:
      - 8200:8080
    profiles:
      - local-build
      - local-build-frontend
    environment:
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: env-docker
      APP_ROUTES_BACKEND_URI: http://todo-app-backend:8080/
    extra_hosts:
      - "kubernetes.docker.internal:host-gateway"
    build: ./../frontend
    networks:
      - app
  frontend:
    container_name: todo-app-frontend
    image: ghcr.io/mrsebastian/todoappossdemo-frontend:latest-dev
    pull_policy: always
    ports:
      - 8200:8080
    environment:
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: env-docker
      APP_ROUTES_BACKEND_URI: http://todo-app-backend:8080/
    extra_hosts:
      - "kubernetes.docker.internal:host-gateway"
    networks:
      - app

  backend-local-build:
    container_name: todo-app-backend
    profiles:
      - local-build
      - local-build-backend
    ports:
      - 8201:8080
    environment:
      SPRING_PROFILES_ACTIVE: env-docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://todo-app-postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: todo
      SPRING_DATASOURCE_PASSWORD: todo
    extra_hosts:
      - "kubernetes.docker.internal:host-gateway"
    build: ./../backend
    networks:
      - db
      - app
  backend:
    container_name: todo-app-backend
    image: ghcr.io/mrsebastian/todoappossdemo-backend:latest-dev
    ports:
      - 8201:8080
    pull_policy: always
    environment:
      SPRING_PROFILES_ACTIVE: env-docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://todo-app-postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: todo
      SPRING_DATASOURCE_PASSWORD: todo
    extra_hosts:
      - "kubernetes.docker.internal:host-gateway"
    networks:
      - db
      - app
  # infrastructure

  oracledb-xe:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    container_name: todo-app-oracledb-xe
    ports:
      - 1521:1521
    profiles:
      - oracledb-xe
    environment:
      ORACLE_PWD: secret
    networks:
      - db
  # sqlplus sys/secret@XEPDB1 as sysdba
  # SQL> CREATE USER todoapp IDENTIFIED BY todosecret QUOTA UNLIMITED ON USERS;
  # SQL> GRANT CONNECT, RESOURCE TO todoapp;

  gvenzl-oracledb-xe:
    image: gvenzl/oracle-xe
    container_name: todo-app-gvenzl-oracledb-xe
    ports:
      - 1521:1521
    profiles:
      - oracledb-gvenzl
    environment:
      ORACLE_PASSWORD: secret
      APP_USER: pp
      APP_USER_PASSWORD: ppsecret
    networks:
      - db

  mariadb:
    image: mariadb
    container_name: todo-app-mariadb
    ports:
      - 3306:3306
    profiles:
      - mariadb
    environment:
      MARIADB_USER: example-user
      MARIADB_PASSWORD: my_cool_secret
      MARIADB_DATABASE: exmple-database
      MARIADB_ROOT_PASSWORD: my-secret-pw
    networks:
      - db
  mongo:
    image: mongo
    container_name: todo-app-mongo
    ports:
      - 27017:27017
    profiles:
      - mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: todo
    networks:
      - db
      - mongodb

  mongo-express:
    image: mongo-express
    container_name: todo-app-mongo-express
    ports:
      - 8181:8081
    profiles:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - mongodb

  postgres-app:
    image: postgres:16.1-alpine3.18
    container_name: todo-app-postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo
    networks:
      - db
      - postgres


  # Keycloak (SSO)
  keycloak:
    image: quay.io/keycloak/keycloak:20.0.5
    container_name: todo-app-keycloak
    command:
      - start-dev --http-relative-path /auth
    depends_on:
      - postgres-keycloak
    ports:
      - 8100:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: change_me
      KC_HOSTNAME_STRICT: false
      db: postgress
      features: token-exchange
      db-url: jdbc:postgresql://todo-app-postgres-keycloak:5432/keycloak
      db-username: keycloak-user
      db-password: keycloak-secret
    extra_hosts:
      - "kubernetes.docker.internal:host-gateway"
    networks:
      - keycloak

  init-keycloak:
    image: klg71/keycloakmigration
    container_name: todo-app-init-keycloak
    depends_on:
      - keycloak
    environment:
      ADMIN_USER: admin
      ADMIN_PASSWORD: change_me
      BASEURL: http://todo-app-keycloak:8080/auth # uses internal docker network to access the keycloak via its back channel port
      WAIT_FOR_KEYCLOAK: 'true'
      KEYCLOAK_CHANGELOG: /migration/keycloak-changelog.yml
    volumes:
      - './keycloak/migration:/migration'
    networks:
      - keycloak

  postgres-keycloak:
    image: postgres:13.2
    container_name: todo-app-postgres-keycloak
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak-user
      POSTGRES_PASSWORD: keycloak-secret
    networks:
      - keycloak
      - postgres

  # Tools
  postgres-pg-admin:
    image: dpage/pgadmin4:8.6
    container_name: todo-app-pg-admin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@a.de
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 8101:80
    networks:
      - postgres
      - db

networks:
  keycloak:
  postgres:
  app:
  db:
name: build ghcr image from tag

on:
  push:
    tags:
      - "*/v*"

env:
  REGISTRY: ghcr.io

jobs:
  publish-ghcr-image:
    runs-on: ubuntu-latest
    steps:
      - uses: olegtarasov/get-tag@v2.1.3
        id: getTagNameParts
        with:
          tagRegex: (?<service>.*)\/v(?<version>.*) #example: backend/v1.2.3
          tagRegexGroup: 0

      - name: show-service
        env:
          ghRef: ${{ github.ref }}
          service: ${{ steps.getTagNameParts.outputs.service }}
          version: ${{ steps.getTagNameParts.outputs.version }}
          tagFromAction: ${{ steps.getTagNameParts.outputs.tag }}
        run: |
          echo "Ref: $ghRef"
          echo "Service: $service"
          echo "Version: $version"
          echo "tagFromAction: $tagFromAction"

      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        env:
          service: ${{ steps.getTagNameParts.outputs.service }}
        with:
          cache: 'maven'
          cache-dependency-path: ${{ steps.getTagNameParts.outputs.service }}/pom.xml
          java-version: '17'
          distribution: 'temurin'

      - name: build jar without tests
        run: mvn -B -ntp -DskipTests package

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        env:
          tagDefinitionMajorOnly: type=match,pattern=(${{ steps.getTagNameParts.outputs.service }})/v(\d).\d.\d,group=2
          tagDefinitionMajorMinor: type=match,pattern=(${{ steps.getTagNameParts.outputs.service }})/v(\d.\d).\d,group=2
          tagDefinitionFullVersion: type=match,pattern=(${{ steps.getTagNameParts.outputs.service }})/v(.*),group=2
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-${{ steps.getTagNameParts.outputs.service }}
          tags: |
            $tagDefinitionMajorOnly
            $tagDefinitionMajorMinor
            $tagDefinitionFullVersion
            type=raw,value=latest

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ steps.getTagNameParts.outputs.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
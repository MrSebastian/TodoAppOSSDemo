name: callable build ghcr image from tag
on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        description: 'tag that is used for build'
      service:
        required: true
        type: string
        description: 'name of service to use'
      image-name:
        required: false
        type: string
        default: ''
        description: 'explicit image name'

env:
  REGISTRY: ghcr.io

jobs:
  publish-ghcr-image:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:

      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          cache: 'maven'
          cache-dependency-path: ${{ inputs.service }}/pom.xml
          java-version: '17'
          distribution: 'temurin'

      - name: build jar without tests
        run: mvn -B -ntp -DskipTests package -f ${{ inputs.service }}/pom.xml

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        env:
          default-image-name: ${{ github.repository }}-${{ inputs.service }}
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.image-name || env.default-image-name }}
          context: git
          # tags:
          # - Major
          # - Major.Minor
          # - full semver: 1.2.3
          # - latest
          tags: |
            type=match,pattern=(${{ inputs.service }})/v(\d).\d.\d,group=2
            type=match,pattern=(${{ inputs.service }})/v(\d.\d).\d,group=2
            type=match,pattern=(${{ inputs.service }})/v(.*),group=2
            type=raw,value=latest

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ inputs.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
security:
  oauth2:
    resource.user-info-uri: ${app.oauth2.userinfo-uri}

spring:
  application.name: @project.artifactId@
  banner.location: banner.txt
  graphql:
    graphiql:
      enabled: true
  profiles:
    group:
      db-h2:
        - persistence-sql
      db-maria:
        - persistence-sql
      db-postgre:
        - persistence-sql
      db-oracle:
        - persistence-sql
      db-mongo:
        - persistence-mongo
      env-docker:
        - db-postgre
        - log-dev
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${app.oauth2.jwk-set-uri}

server:
  shutdown: "graceful"
  port: 8080
  error:
    include-exception: false
    include-stacktrace: never
    whitelabel:
      enabled: false

# Config for spring actuator endpoints
management:
  server.port: ${server.port}
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health, info, prometheus, livenessstate, readinessstate
      path-mapping:
        prometheus: metrics
  endpoint:
    health.enabled: true
    info.enabled: true
    prometheus.enabled: true
  info:
    env:
      enabled: true
info.application.name: @project.artifactId@
info.application.version: @project.version@

app:
  oauth2:
    jwk-set-uri: http://kubernetes.docker.internal:8100/auth/realms/${app.realm}/protocol/openid-connect/certs
    userinfo-uri: http://kubernetes.docker.internal:8100/auth/realms/${app.realm}/protocol/openid-connect/userinfo
  realm: testrealm

todoapp:
  api:
    task:
      rest:
        base-path: tasks